/* here I have defined a root element in CSS variables to have consistent theming */
:root {
  /* Main colors - Updated for WCAG 2.1 AA compliance */
  --color-primary: #0056b3;        
  --color-primary-dark: #004494;     
  --color-primary-light: #e6f0ff;    
 /* Text colors that can guarantee special contrast in my API's (e.g.4.5:1 contrast ratio) */
  --color-text: #1a1a1a;            
  --color-text-light: #4a4a4a;      
  --color-text-white: #ffffff;      
  /* Background colors */
  --color-background: #ffffff;      
  --color-surface: #f8f9fa;         
  --color-surface-dark: #e9ecef;    
  /* Status colors - Updated for better contrast */
  --color-success: #2e7d32;         
  --color-success-dark: #1b5e20;
  --color-warning: #ed6c02;          
  --color-warning-light: #fff3e0;
  --color-warning-dark: #e65100;
  --color-pollen-low: #88cc00;
  --color-pollen-medium: #ffcc00;
  --color-error: #d32f2f;            
  --color-error-light: #ffebee;
  --color-info: #0288d1;            
  --color-danger: #f44336; /* here I made Vibrant red color for warnings */
  --color-danger-dark: #d32f2f;/* here I made Darker red color for hover/active */
  /* Border colors */
  --color-border: #dee2e6;           
  --color-border-dark: #adb5bd;      
  /* Shadow colors */
  --shadow-color: #00000026;/* here I design shadow color for better styling */
  --shadow-color-dark: rgba(0, 0, 0, 0.25);
  /* Light theme variables */
   --color-secondary: #c62828; /* I made different light thema for varying opacity levels for light and dark mode compatibility */
  --color-secondary-light: rgba(198, 40, 40, 0.1);
  --color-tertiary: #37474f;        
  --color-white: #ffffff;
  --color-white-rgb:  hsl(0, 0%, 100%);
 --color-accent: #1b5e20;  /* i used color-accent variable here for User interfaces highlights. it is deep green. 
  --border-radius: 4px;
  --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.15);  /* i used it to show small shadow*/ 
  --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.15);
  --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.15);/* i highlighted here larg shadow */
   --transition-speed: 0.3s;   /*i clarify here shadow levels and also default transition speed */
  /* Responsive breakpoints */
  --mobile: 320px;
  --desktop: 768px;
  /* Responsive spacing */
  /*I used here the font size variables like xs, sm, base, lg, xl...ect., and 2xl means a clear scale from extra small to extra large. I think this helps keep typography consistent */
  --spacing-xs: 0.5rem;
  --spacing-sm: 1rem;
  --spacing-md: 1.5rem;
  --spacing-lg: 2rem;
  --spacing-xl: 3rem; /*it means extra larg spacing. */
  /* Responsive font sizes */
  --font-size-xs: 0.75rem;/*it implicate extra small font size  ...xs.*/
  --font-size-sm: 0.875rem;
  --font-size-base: 1rem;
  --font-size-lg: 1.25rem;
  --font-size-xl: 1.5rem;/*it means extra larg font size   ..xl*/
  --font-size-2xl: 2rem;
} 

/* Dark theme variables - Updated for WCAG compliance */
[data-theme="dark"] {
  --color-primary: #90caf9;          
  --color-primary-dark: #42a5f5;    
  --color-secondary: #ef5350;     
  --color-background: #121212;       
  --color-surface: #1e1e1e;         
  --color-text: #ffffff;           
  --color-text-secondary: #e0e0e0;   
  --color-border: #424242;          
  --color-error: #ef5350;          
  --color-success: #66bb6a;          
  --color-warning: #ffa726;         
  --color-info: #29b6f6;  
  /* i used here different dark shadow color styling */
  --shadow-sm: 0 2px 4px #0000004d;/*it means small size shadow color*/
  --shadow-md: 0 4px 6px hsla(0, 0%, 0%, 0.3);/**/
  --shadow-lg: 0 10px 15px hwb(0 0% 100% / 0.3);/*it implicate larg size shadow color  and i indicate this with ...lg*/
}

/* CSS styles rules API's design.*/
* {
  margin: 0;
  padding: 0;
 box-sizing: border-box;    /* i use this to make padding and borders easier inside the total width and height */
  transition: all 0.2s ease-in-out; /* i made here smooth transition for user inerface elements */
}

html {
  font-size: 16px;
}

body {
  font-family:system-ui, "Segoe UI", Roboto, sans-serif; /*". I have Used here a friendly and modern set of fonts for easy reading */
  -webkit-font-smoothing: antialiased; /* i use this to improves smoother and sharper browser */
  background-color: var(--color-background);
  color: var(--color-tertiary);   /* I Use the tertiary color for the main text */
  line-height: 1.5;
  transition: background-color var(--transition-speed), color var(--transition-speed); /* i generate this for Smoothly transition background and text color changes */
  min-width: var(--mobile); /* I use var(--) for beter styling and it correspond with :root {} */
   overflow-x: hidden;   /*this code Prevent horizontal scrolling */
}

/* Focus styles for better accessibility */
:focus {
  outline: 3px solid var(--color-primary);  /* I made this for a thick border using the primary color */
  outline-offset: 2px;/*  I add here some space between the border and the element. */
}
/* Hide focus outline unless focus is visible for keyboard navigation. */
:focus:not(:focus-visible) {
   outline: none;   /*i use this to prevent outline when user clicks with a mouse */
}

:focus-visible {
  outline: 3px solid var(--color-primary);
  outline-offset: 2px;
}

/* Button styles with increased contrast. soure info:"https://www.elegantthemes.com/blog/design/understanding-css-variables-and-how-to-use-them" */
button {
  cursor: pointer;
  background-color: var(--color-primary);  /* I used here the Primary brand color for button background*/
  color: var(--color-white);                    
  border: none;
  padding: 0.5rem 1rem;
   border-radius: var(--border-radius);  /*i used this in order to rounded corners for modern look */
  width: 825px;
}

button:hover {
  background-color: var(--color-primary-dark);  /*I made this to make slightly darker background on hover for feedback . */
}

button:focus,
a:focus {
  outline: 2px solid var(--color-primary);     
  outline-offset: 2px;
}

/* Link styles with improved contrast */
a {
 text-decoration: none;   /* with this I try to remove underline by default */
  color: inherit;
}

a:hover {
  color: var(--color-primary-dark);
  text-decoration: underline;  /* I add underline here to indicate it's a link */
}

a:focus {
   outline: 3px solid var(--color-primary);  /*with this I have tried to show clear focus outline for links */
   outline-offset: 2px;  /*I add here spacing from edge */
}

/* Form controls with improved contrast */
input, select, textarea {
  border: 2px solid var(--color-border);  /*  I have defined here a visible border for clarity and contrast*/
  border-radius: var(--border-radius);/*  I have slightly rounded corners for better appearance */
  padding: 0.75rem;
  background-color: var(--color-background);/*   */
  color: var(--color-text);
  transition: border-color 0.2s ease;/* with this i use Smooth transition when border color changes (for instances on focus) */
}
/* This style will be used for input, select, and textarea. I mean for elements when they are focused  */

input:focus, select:focus, textarea:focus {
  border-color: var(--color-primary);
  outline: none;
}

/* High contrast mode support and active when user enabled a high-contrast mode or forced color scheme on their system*/
@media (forced-colors: active) {
  :root {
    --color-primary: ButtonText;
    --color-background: Canvas;
    --color-text: CanvasText;
  }
  
  button, a {
    border: 2px solid currentColor;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {/* I made this ...motion: reduce to respect user preferences to reduce motion effects for accessibility.  */
  * {
    animation-duration: 0.01ms !important;/* Minimize animations */
   animation-iteration-count: 1 !important;  /* i have set ..count as one to Limit animation loops */
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;/* with this I have disable smooth scrolling */
  }
}

/* with below code I have attempted to Skip to main content link. I mean it is invisible by default but appears when focused (e.g.for keyboard users) . "*/
.skip-to-main {
  position: absolute;
   left: -9999px;  /*Hide off-screen */ 
  z-index: 999;
  padding: 1em;
  background-color: var(--color-primary); 
 color: var(--color-text-white);  /* i used this to interac between :root{} and var(--) */
  text-decoration: none;
}

.skip-to-main:focus {
  left: 50%;
  transform: translateX(-50%);
}

/* Accessibility and interaction styles enable user to minimize motion and animations */
@media (prefers-reduced-motion: reduce) {
  * {
   animation-duration: 0.01ms !important;  /*  with !important i have forces a CSS property to override others (voorang) */
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

@media (forced-colors: active) {
  :root {
    --color-primary: ButtonText;
    --color-background: Canvas;
    --color-text: CanvasText;
  }
}

/* Interactive buttons */
.btn {
  cursor: pointer;
  transition: all var(--transition-speed);   /* i use this to Smooth interaction feedback */
}

/* City card interaction */
.city-card {
  cursor: pointer;
   transition: all 0.2s ease;  /*with this i tried to make a quick visual feedback */
}

.city-card:hover {
transform: translateY(-2px);  /* this aids Lift on hover.  */
  box-shadow: var(--shadow-sm);/* i apply here small size shadow character*/
}

/* Form styles */
.form-group label {
  display: block;
  margin-bottom: 6px;
  font-weight: 600;  /*i set here the font size on 600 because it suit better */
  color: #2c2c2c;
}

.form-control {
  width: 100%;
  padding: 0.75rem;
   border: 1px solid var(--color-border); /*i used here the color variable var(--)*/
  border-radius: var(--border-radius);
  background-color: var(--color-background);
  color: var(--color-text);
 transition: border-color var(--transition-speed), box-shadow var(--transition-speed);   /* i use this code for Smooth focus changes */
}

.form-control:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.1);  /* with this code i have tried to manifest a subtle glow propperty. */
}

.dashboard-card:hover {
  transform: translateY(-2px);  /* i made this in order to raise on hover */
  box-shadow: var(--shadow-sm); 
}
/* with below code I have attempted to show loading spinner for disabled buttons */
.btn:disabled::after {
  content: '';
  animation: spin 1s linear infinite;
}

/* Card styles */
.card {
  background-color: var(--color-surface);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-md);
  padding: 1.5rem;
  transition: background-color var(--transition-speed);/* i use this code for Smooth focus/hover effects */ 
}

/* Alert styles */
.alert {
  padding: 1rem;
  border-radius: var(--border-radius);
  margin-bottom: 1rem;
 transition: background-color var(--transition-speed), color var(--transition-speed); /* I made this for a smooth transitions for two specific properties (background-color and color) */
}
 /* i have determined in below different alert color characters and I have tried for a better styling use different color*/
.alert-info {
  background-color: var(--color-info);
  color: var(--color-background);
}

.alert-error {
  background-color: var(--color-error);
  color:var(--color-background);
}

.alert-success {
  background-color: var(--color-success);
  color:var(--color-background);
}

.alert-warning {
  background-color: var(--color-warning);
  color: var(--color-background);
}

/* Theme toggle button */
.theme-toggle {
  position: fixed; /* Stays in viewport */
  bottom: 20px;
  right: 20px;
  padding: 10px;/* this is a Internal spacing */
  border-radius: 50%;
  background-color: var(--color-surface);
  border: 1px solid var(--color-border);
  cursor: pointer;
  z-index: 1000; /* Stays on top */
  transition: all var(--transition-speed);/* wit this i ensure the Smooth state changes */
}

.theme-toggle:hover {
  transform: scale(1.1);
}

.theme-toggle:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

/* Container styles */
.container {
  width: 100%;  /* with this I ensure a Full width */
  padding: 1rem;
  margin: 0 auto;/* Horizontal centering */
}

/* Grid system */
.grid {
  display: grid;
  gap: var(--spacing-md);
}

/* Responsive grid columns */
.grid-cols-1 { grid-template-columns: repeat(1, 1fr); }  /* with this i indicate a Single column */
.grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
.grid-cols-3 { grid-template-columns: repeat(3, 1fr); } /* with this i define Three equal columns */
.grid-cols-4 { grid-template-columns: repeat(4, 1fr); } /* with this i indicate Four equal columns */

/* Responsive typography */
h1 { font-size: 1.5rem; }/* 24px */
h2 { font-size: 1.25rem; }
h3 { font-size: 1.125rem; }
p { font-size: 1rem; }/* i mean here that 1rem=16px base */

/* Responsive spacing */
.section {
  padding: var(--spacing-md) 0; /*  medium spacing size variable */
}

/* with this I generate a responsive images */
img {
  max-width: 100%;
  height: auto;
}

/* Responsive buttons */
.btn {
  width: 100%;
  padding: 0.75rem 1rem;/* i generate a Optimal touch target */
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.3s;/* i made a Smooth hover effect */
}

/* Responsive forms */
.form-group {
  margin-bottom: 1rem; /* it assist a Consistent spacing. */
}

.form-control {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid var(--color-border);/* it Applies a light border using themeable color variable */
  border-radius: 4px;/* I rounds corners slightly here for modern UI (user interface) look */
  font-size: 1rem;
}


/* I generate here a mobile-first media character */
@media (min-width: 320px) {  /* here I Apply a layout adjustments for smallest mobile screens */
  .container {
    padding: 0 var(--spacing-sm); /*  i Restricted horizontal padding with ....sm code  */
  }
  
  h1 { font-size: var(--font-size-xl); } /* i Uses here a larger heading size for visual hierarchy on small devices */
  h2 { font-size: var(--font-size-lg); } 
  h3 { font-size: var(--font-size-base); }/* I have Sets standard base (normal) font size for tertiary headings */
  
  .btn {
    padding: var(--spacing-xs) var(--spacing-sm);  /* I use here ..extra small (xs) and small (sm) to Reduces vertical padding for compact buttons on mobile */
    font-size: var(--font-size-sm); 
  }
}

@media (min-width: 768px) { /* I have Applly a layout adjustments for medium-sized screens (768x) (e.g tablets) */
  .container {
    max-width: 1200px; /* I used a Limits container width size on desktops for better readability.  */
    padding: 2rem;    
  }
  
  h1 { font-size: 2rem; }       /* 2rem= 32px and I Increases h1 font size to 2rem for larger screens */
  h2 { font-size: 1.5rem; }    
  h3 { font-size: 1.25rem; }    /* I arises h3 font size to 1.25rem= 20px to remain legible */
  
  .btn {
    width: auto;                /* with auto function i Allow button width to adjust based on content */
    min-width: 200px;          
  }
  
  .grid-cols-2 { grid-template-columns: repeat(2, 1fr); } /* i have Created here 2 equal columns in grid */
  .grid-cols-3 { grid-template-columns: repeat(3, 1fr); } /* with 1fr i mean one fraction of the available space */
  .grid-cols-4 { grid-template-columns: repeat(4, 1fr); } 
}



@media (min-width: 1024px) {  /* I have Applly here a layout propperty for large desktop displays */
  .container {
    padding: 0 var(--spacing-lg);
  }
  
  .section {
    padding: var(--spacing-xl) 0;
  }
}

/* Navigation */
.nav {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: #4CAF50;
  padding: 1rem; /* I have added here internal spacing to prevent text from touching edges */
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);/* i use here a Soft top shadow to clarify nav visually */
  z-index: 1000;
}

.nav-list {
  display: flex;
  justify-content: space-around;/* here I have distributedd items evenly (across screen width) */
  list-style: none;/* I have removed default bullet points from list with this code.  */
}

.nav-list a {
  color: white;
  text-decoration: none;/* I have attemted to removes underline from links here */
  padding: 0.5rem 1rem;
  border: 2px solid transparent;/* i generate here a Placeholder for active state border (it is transparant) */
  border-radius: 4px;
  transition: all 0.3s ease;/* i show here a Smooth transitions on hover*/
}

.nav-list a:hover {
  color: rgba(255, 255, 255, 0.8);/* i made here a slightly faded white on hover */
  background: rgba(255, 255, 255, 0.1);
}

/* Active navigation item */
.nav-list a.active {
  border: 2px solid white;/* I Highlights here with this code a current page with visible white border */
  background: rgba(255, 255, 255, 0.1);/* i have Adds here soft background for active tab */
  font-weight: 500;
}

@media (min-width: 768px) {
  .nav {
    position: static;
    padding: 1rem 2rem;
    box-shadow: none;
  }

  .nav-list {
    justify-content: flex-start;/* i have Aligned the nav items to the left */
    gap: 2rem;/* i try here to Adds consistent spacing between menu items functions */
  }

  .nav-list a {
    padding: 0.5rem 1rem;/* I am Keeping here a consistent padding in desktop view */
  }
}

/* Responsive cards */
.card {
  padding: 1.5rem;/* it Provides breathing room inside card containers */
  margin-bottom: 1.5rem;/* i have Added a vertical spacing between cards */
}

 @media (min-width: 768px) { /*i applly here a styles only on screens 768px wide */
  .card {
    padding: 1.5rem;
    margin-bottom: 1.5rem;
  }
 }

/* i demonestrate here a Responsive tables */
.table-responsive {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;/*  with this code I am Improving scroll performance on iOS devices */
}

/* I made here another Responsive character */
.hide-mobile {
  display: none;
}

@media (min-width: 768px) {
  .hide-mobile {
    display: block;
  }
  
  .hide-desktop {
    display: none; 
  }
}

/* Spacing */
.spacing-xs { margin: var(--space-xs); }
.spacing-sm { margin: var(--space-sm); }
.spacing-md { margin: var(--space-md); }

.padding-xs { padding: var(--space-xs); }
.padding-sm { padding: var(--space-sm); }/* here i have shown a Standard inner spacing */
.padding-md { padding: var(--space-md); }/* also here i demostrated larger inner spacing for key sections */

/* Flexbox */
.flex { display: flex; }
.flex-column { flex-direction: column; }
.flex-center { 
  display: flex;
  align-items: center;/* i have target here the vertically centers items within a flex container */
  justify-content: center; /* I have targets Centers contenthere because it have both vertically and horizontally */
}

/* Text */
.text-center { text-align: center; } /* I have aligns text here to center of container */
.text-bold { font-weight: 600; }/* Bolder text for headings */

/* Visibility */
.hidden { display: none; }


 
/* Buttons */
.button {
  display: inline-block; /* i Make button here like inline element with block-level properties */
  padding: var(--space-sm) var(--space-md); /* I try here to get balanced in internal spacing. soure info:"https://codyhouse.co/ds/docs/framework/spacing" */
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: var(--border-radius);/* I am apllying here a consistent corner rounding using global variable  */
  cursor: pointer;
  transition: background-color 0.2s;
}

.button:hover {
  background-color: var(--primary-dark);
}

/* Cards */
.card {
  background: var(--surface);/*i have Used here a theme-based surface color for consistent UI character */
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-sm); /* i try here to Added a subtle depth looks */
  padding: var(--space-md);
}

/* Forms */
.input {
  width: 100%;
  padding: var(--space-sm);
  border: 1px solid var(--border);
  border-radius: var(--border-radius);
}

/* Alerts */
.alert {
  padding: var(--space-sm);/* i have attemted to adds internal spacing here */
  border-radius: var(--border-radius);
  margin-bottom: var(--space-sm); /* i use here ..sm which can adds a small spacing below alert */
}

.alert-success {
  background-color: var(--success);
  color: white;
}

/* 
   LAYOUT
  */
.container {
  width: 100%;
  max-width: 1200px; /* here I have try to Prevents overly wide layouts on large screens with special code */
  margin: 0 auto; /* i set here the Centers content horizontally */
  padding: var(--space-md);/* here I have adds breathing room propperty around main content */
}

/* 
   RESPONSIVE ADJUSTMENTS
  */
@media (min-width: 768px) {
  .desktop-flex-row { flex-direction: row; }
  .desktop-visible { display: block; }
  .desktop-hidden { display: none; }
  
  .container {
    padding: var(--space-lg);
  }
}

@media (max-width: 767px) {
  .mobile-hidden { display: none; }/* with this code I hides elements because it is not needed on small screens */
}