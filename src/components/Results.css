
/* Layout container */
.results-container {
  margin: 0 auto;
  max-width: 800px;
  padding: 1.25rem;
}

.results-container h2 {
  color: var(--color-text);
  margin-bottom: 1rem;
}

.results-intro {
  color: var(--color-text-light);
  line-height: 1.6;
  margin-bottom: 1.5rem;
}

.results-list {
  display: flex;
  flex-direction: column;
  row-gap: 20px;
}

.result-card {
  background: var(--color-white);
  border-radius: 8px;
  box-shadow: var(--shadow-color);
  display: flex;
 overflow: hidden;  /* I used content overflow here to hide any elements that extends beyond the boundaries of view .  */
}

.result-rank {
  background: var(--color-success);
  color: var(--color-text-white);
  font-weight: 700;
  font-size: 24px;
  width: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.result-content {
  flex-grow: 1;
  padding: 1.25rem;
}

.result-header {
  border-bottom: 1px solid var(--color-border);
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 15px;
  margin-bottom: 15px;
}

.result-header h3 {
  font-size: 20px;
  color: var(--color-text);
  margin: 0;
}

.result-score {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.score-value {
  color: var(--color-success);
  font-size: 24px;
  font-weight: 700;
}

.score-label {
  color: var(--color-text-light);
  font-size: 14px;
}

/* Weather and pollen summaries */
.result-details {
  display: flex;
  flex-direction: column;
  gap: 15px;
  margin-bottom: 1.25rem;
}

@media (min-width: 768px) {
  .result-details {
    flex-direction: row;
    justify-content: space-between;
  }
}

.weather-summary {
  display: flex;
  align-items: center;
}

.weather-summary img {
  width: 50px;
  height: 50px;
  margin-right: 0.75rem;
}

.weather-summary .temp {
  font-weight: 600;
  font-size: 18px;
}

.weather-summary .weather-desc {
  font-size: 14px;
  color: var(--color-text-light);
  margin: 0px 16px;
}

.pollen-summary {
  display: flex;
  column-gap: 15px;
}

.pollen-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 5px;
}

.pollen-item span {
  font-size: 12px;
  color: var(--color-text-light);
}

.pollen-indicator {
  border-radius: 50%;
  height: 20px;
  width: 20px;
}

/* UV index + air quality metrics */
.additional-metrics {
  display: flex;
  gap: 20px;
  margin-bottom: 15px;
}

.metric {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.metric-label {
  font-size: 12px;
  color: var(--color-text-light);
}

.metric-value {
  font-weight: bold;
  font-size: 16px;
}

/* Classification styles */
.uv-low {
  color: var(--color-success);
}

.uv-moderate {
  color: var(--color-warning);
}

.uv-high {
  color: var(--color-error);
}

.uv-very-high {
  color: var(--color-danger);
}

.uv-extreme {
  color: var(--color-danger-dark);
}

.pollen-low {
  background: var(--color-success) !important;
  color: var(--color-success);
}

.pollen-moderate {
  background: var(--color-warning) !important;
  color: var(--color-warning);
}

.pollen-high {
 background: var(--color-error) !important;   /*  I used !important here in order to force the background color to override any other conflicting styles just in case */ 
  color: var(--color-error);
}

.pollen-very-high {
   background: var(--color-danger) !important; /* I placed !important here to act for quick fixes or urgent overrides.  */ 
  color: var(--color-danger);
}

.pollen-extreme {
  color: var(--color-danger-dark);
}

.aqi-good {
  color: var(--color-success);
}

.aqi-moderate {
  color: var(--color-warning);
}

.aqi-unhealthy-sensitive {
  color: var(--color-warning);
}

.aqi-unhealthy {
  color: var(--color-error);
}

.aqi-very-unhealthy {
  color: var(--color-danger);
}

.aqi-hazardous {
  color: var(--color-danger-dark);
}

/* Buttons and loaders */
.view-advice-btn {
  text-align: center;
  width: 100%;
}

.results-loading {
  padding: 3rem 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.loading-spinner {
  margin-bottom: 20px;
  border: 5px solid var(--color-surface);
  border-top-color: var(--color-success);
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s linear infinite;/* I have applied here a continuous clockwise spin every 1s using linear timing */
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.results-error {
  padding: 3rem 0;
  text-align: center;
}

.results-error h2 {
  color: var(--color-error);
  margin-bottom: 15px;
}

.results-error p {
  color: var(--color-text-light);
  margin-bottom: 20px;
}

.no-results {
  padding: 3rem 0;
  text-align: center;
}

.no-results p {
  color: var(--color-text-light);
  margin-bottom: 20px;
}

/* Error messages per city */
.city-errors {
  background: var(--color-error-light);
  border: 1px solid var(--color-error);
  padding: 15px;
  border-radius: 4px;
  margin-bottom: 20px;
}

.city-errors h3 {
  color: var(--color-error);
  margin-bottom: 10px;
}

.city-errors ul {
  padding-left: 20px;
  list-style: disc;
}

.city-errors li {
  color: var(--color-error);
  margin-bottom: 5px;
}

.results-container {
  background-color: var(--color-white);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-sm);
  padding: 1.5rem;
  margin-bottom: 1.5rem;
}

.results-header {
  color: var(--color-text);
  margin-bottom: 1rem;
  font-size: 1.25rem;
  font-weight: 600;
}

.results-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));/* I have generated here a responsive columns that grow and also shrink but never smaller than 250px */
  gap: 1rem;/* I have clarified here a uniform spacing of 1rem between grid items."1rem = 16px" */
  margin-top: 1rem;
}

.result-card {
  background-color: var(--color-white);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  padding: 1rem;
  transition: transform 0.2s ease, box-shadow 0.2s ease;/* I used this code for Smooth animate movement and a proper shadow on interaction over 0.2s.  */
}

.result-card:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-sm);
}

.result-title {
  color: var(--color-text);
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.result-value {
  color: var(--color-primary);
  font-size: 1.5rem;
  font-weight: 700;
}

.result-unit {
  color: var(--color-text-light);
  font-size: 0.875rem;
  margin-left: 0.25rem;
}

.result-description {
  color: var(--color-text-light);
  font-size: 0.875rem;
  margin-top: 0.5rem;
}

@media (max-width: 768px) {
  .results-container {
    padding: 1rem;
  }
  
  .results-grid {
    grid-template-columns: 1fr;
  }
}

.score-label {
  color: var(--color-text-light);
  font-size: 14px;
}

.weather-summary .weather-desc {
  font-size: 14px;
  color: var(--color-text-light);
  margin: 0px 16px;
}

.pollen-item span {
  font-size: 12px;
  color: var(--color-text-light);
}

/* Classification styles **/
.uv-low {
  color: var(--color-success);
}

.uv-moderate {
  color: var(--color-warning);
}

.uv-high {
  color: var(--color-error);
}

.uv-very-high {
  color: var(--color-error);
}

.uv-extreme {
  color: var(--color-error);
}

.pollen-low {
  background: var(--color-success) !important;
  color: var(--color-success);
}

.pollen-moderate {
  background: var(--color-warning) !important;
  color: var(--color-warning);
}

.pollen-high {
  background: var(--color-error) !important;
  color: var(--color-error);
}

.pollen-very-high {
  background: var(--color-error) !important;
  color: var(--color-error);
}

.pollen-extreme {
  color: var(--color-error);
}

.aqi-good {
  color: var(--color-success);
}

.aqi-moderate {
  color: var(--color-warning);
}

.aqi-unhealthy-sensitive {
  color: var(--color-warning);
}

.aqi-unhealthy {
  color: var(--color-error);
}

.aqi-very-unhealthy {
  color: var(--color-error);
}

.aqi-hazardous {
  color: var(--color-error);
}

.loading-spinner {
  margin-bottom: 20px;
  border: 5px solid var(--color-surface);
  border-top-color: var(--color-success);
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s linear infinite;
}

.results-error h2 {
  color: var(--color-error);
  margin-bottom: 15px;
}

.results-error p {
  color: var(--color-text-light);
  margin-bottom: 20px;
}

.no-results p {
  color: var(--color-text-light);
  margin-bottom: 20px;
}

.city-errors {
  background: var(--color-error);
  border: 1px solid var(--color-error);
  padding: 15px;
  border-radius: 4px;
  margin-bottom: 20px;
}

.city-errors h3 {
  color: var(--color-error);
  margin-bottom: 10px;
}

.city-errors li {
  color: var(--color-error);
  margin-bottom: 5px;
}
